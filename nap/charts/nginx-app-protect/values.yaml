---
controller:
  name: controller
  kind: deployment
  nginxplus: true
  mgmt:
    licenseTokenSecretName: "license-token"
    sslVerify: false
  nginxReloadTimeout: 60000  # Integer value is correct
  appprotect:
    enable: true
    v5: true
    volumes:
      - name: app-protect-bd-config
        emptyDir: {}
      - name: app-protect-config
        emptyDir: {}
      - name: app-protect-bundles  # Volume name
        persistentVolumeClaim:
          claimName: policy-claim  # Reference the PVC
    volumeMounts:
      - name: app-protect-bundles
        mountPath: /etc/app_protect/bundles
    enforcer:
      host: "127.0.0.1"
      port: 50000
      image:
        repository: private-registry.nginx.com/nap/waf-enforcer
        tag: "5.4.0"
        pullPolicy: IfNotPresent
      securityContext:
        readOnlyRootFilesystem: true
    configManager:
      image:
        repository: private-registry.nginx.com/nap/waf-config-mgr
        tag: "5.4.0"
        pullPolicy: IfNotPresent
      securityContext:
        readOnlyRootFilesystem: false
        allowPrivilegeEscalation: false
        runAsUser: 101
        runAsNonRoot: true
        capabilities:
          drop:
            - all
  enableSnippets: true
  image:
    repository: private-registry.nginx.com/nginx-ic-nap-v5/nginx-plus-ingress
    tag: "4.0.1"
    pullPolicy: IfNotPresent
  securityContext:
    readOnlyRootFilesystem: false
    allowPrivilegeEscalation: false
    runAsUser: 101
    runAsNonRoot: true
    capabilities:
      drop:
        - all
  logLevel: "error"  # Fixed: Changed to a string value
  nginxStatus:
    allowCidrs: "0.0.0.0/0"  # String value is correct
    port: 9000
  readyStatus:
    initialDelaySeconds: 30  # Integer value is correct
  serviceAccount:
    imagePullSecretName: regcred
prometheus:
  create: true